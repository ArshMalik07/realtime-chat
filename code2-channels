### asgi.py ###

from channels.routing import ProtocolTypeRouter, URLRouter
from channels.security.websocket import AllowedHostsOriginValidator
from channels.auth import AuthMiddlewareStack


django_asgi_app = get_asgi_application()

from a_rtchat import routing

application = ProtocolTypeRouter({
    "http": django_asgi_app,
    "websocket": AllowedHostsOriginValidator(
        AuthMiddlewareStack(URLRouter(routing.websocket_urlpatterns))
    ),
})




### consumers.py ###

from channels.generic.websocket import WebsocketConsumer

class ChatroomConsumer(WebsocketConsumer):
    def connect(self):
        self.accept()




### settings.py ###

CHANNEL_LAYERS = {
    'default': {
        "BACKEND": "channels.layers.InMemoryChannelLayer",
    }
}



### consumers.py ####

from asgiref.sync import async_to_sync

async_to_sync(self.channel_layer.group_add)(
    self.chatroom_name, self.channel_name
)




### online_count.html ###

<span id="online-count" hx-swap-oob="outerHTML" class="fade-in-down pr-1" >
    {{ online_count }} 
    <style>
        @keyframes fadeInDown {
            from { opacity: 0; transform: translateY(-8px); }
            to { opacity: 1; transform: translateY(0px); }
        }
        .fade-in-down {
            animation: fadeInDown 0.4s ease;
        }
    </style>
</span>
